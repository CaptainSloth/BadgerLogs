#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: d743f840-447a-46af-9172-782a9cab3723
# Source File: BadgerEventLogsCollector.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.127
     Generated on:       9/22/2016 2:06 PM
     Generated by:       Rob Duboff
     Organization:       BadgerSoft
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-BadgerEventLogsCollector_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		$local:type = [FolderBrowserModernDialog]
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Reflection;

        namespace SAPIENTypes
        {
		    public class FolderBrowserModernDialog : System.Windows.Forms.CommonDialog
            {
                private System.Windows.Forms.OpenFileDialog fileDialog;
                public FolderBrowserModernDialog()
                {
                    fileDialog = new System.Windows.Forms.OpenFileDialog();
                    fileDialog.Filter = "Folders|\n";
                    fileDialog.AddExtension = false;
                    fileDialog.CheckFileExists = false;
                    fileDialog.DereferenceLinks = true;
                    fileDialog.Multiselect = false;
                    fileDialog.Title = "Select a folder";
                }

                public string Title
                {
                    get { return fileDialog.Title; }
                    set { fileDialog.Title = value; }
                }

                public string InitialDirectory
                {
                    get { return fileDialog.InitialDirectory; }
                    set { fileDialog.InitialDirectory = value; }
                }
                
                public string SelectedPath
                {
                    get { return fileDialog.FileName; }
                    set { fileDialog.FileName = value; }
                }

                object InvokeMethod(Type type, object obj, string method, object[] parameters)
                {
                    MethodInfo methInfo = type.GetMethod(method, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);
                    return methInfo.Invoke(obj, parameters);
                }

                bool ShowOriginalBrowserDialog(IntPtr hwndOwner)
                {
                    FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();
                    folderBrowserDialog.Description = this.Title;
                    folderBrowserDialog.SelectedPath = !string.IsNullOrEmpty(this.SelectedPath) ? this.SelectedPath : this.InitialDirectory;
                    folderBrowserDialog.ShowNewFolderButton = false;
                    if (folderBrowserDialog.ShowDialog() == DialogResult.OK)
                    {
                        fileDialog.FileName = folderBrowserDialog.SelectedPath;
                        return true;
                    }
                    return false;
                }

                protected override bool RunDialog(IntPtr hwndOwner)
                {
                    if (Environment.OSVersion.Version.Major >= 6)
                    {      
                        try
                        {
                            bool flag = false;
                            System.Reflection.Assembly assembly = Assembly.Load("System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");
                            Type typeIFileDialog = assembly.GetType("System.Windows.Forms.FileDialogNative").GetNestedType("IFileDialog", BindingFlags.NonPublic);
                            uint num = 0;
                            object dialog = InvokeMethod(fileDialog.GetType(), fileDialog, "CreateVistaDialog", null);
                            InvokeMethod(fileDialog.GetType(), fileDialog, "OnBeforeVistaDialog", new object[] { dialog });
                            uint options = (uint)InvokeMethod(typeof(System.Windows.Forms.FileDialog), fileDialog, "GetOptions", null) | (uint)0x20;
                            InvokeMethod(typeIFileDialog, dialog, "SetOptions", new object[] { options });
                            Type vistaDialogEventsType = assembly.GetType("System.Windows.Forms.FileDialog").GetNestedType("VistaDialogEvents", BindingFlags.NonPublic);
                            object pfde = Activator.CreateInstance(vistaDialogEventsType, fileDialog);
                            object[] parameters = new object[] { pfde, num };
                            InvokeMethod(typeIFileDialog, dialog, "Advise", parameters);
                            num = (uint)parameters[1];
                            try
                            {
                                int num2 = (int)InvokeMethod(typeIFileDialog, dialog, "Show", new object[] { hwndOwner });
                                flag = 0 == num2;
                            }
                            finally
                            {
                                InvokeMethod(typeIFileDialog, dialog, "Unadvise", new object[] { num });
                                GC.KeepAlive(pfde);
                            }
                            return flag;
                        }
                        catch
                        {
                            return ShowOriginalBrowserDialog(hwndOwner);
                        }
                    }
                    else
                        return ShowOriginalBrowserDialog(hwndOwner);
                }

                public override void Reset()
                {
                    fileDialog.Reset();
                }
            }
       }
"@ | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formBadgerEventCollector = New-Object 'System.Windows.Forms.Form'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$GroupBoxExportResults = New-Object 'System.Windows.Forms.GroupBox'
	$buttonExportResults = New-Object 'System.Windows.Forms.Button'
	$checkboxOpenResultsAutomatic = New-Object 'System.Windows.Forms.CheckBox'
	$radiobuttonHTML = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonCSV = New-Object 'System.Windows.Forms.RadioButton'
	$DataGridViewDisplayResults = New-Object 'System.Windows.Forms.DataGridView'
	$GroupBoxEventLog = New-Object 'System.Windows.Forms.GroupBox'
	$buttonLoad = New-Object 'System.Windows.Forms.Button'
	$ComboBoxEventLogSelect = New-Object 'System.Windows.Forms.ComboBox'
	$labelSelectALogToQuery = New-Object 'System.Windows.Forms.Label'
	$GroupBoxComputerNameInput = New-Object 'System.Windows.Forms.GroupBox'
	$buttonConnect = New-Object 'System.Windows.Forms.Button'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$labelEnterComputerName = New-Object 'System.Windows.Forms.Label'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$closeToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$helpToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$onlineDocsToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$abouToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$errorprovider1 = New-Object 'System.Windows.Forms.ErrorProvider'
	$folderbrowsermoderndialog1 = New-Object 'SAPIENTypes.FolderBrowserModernDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formBadgerEventCollector_Load={
		#TODO: Initialize Form Controls here
		$script:ComputerName = $env:COMPUTERNAME
		$textbox1.Text = $ComputerName
	}
	
	#region Control Helper Functions
	function Load-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		.PARAMETER AutoSizeColumns
		    Resizes DataGridView control's columns after loading the items.
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
		{
			$DataGridView.DataSource = $Item.Tables[0]
		}
		elseif ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{
				$array.Add($Item)
			}
			$DataGridView.DataSource = $array
		}
		
		if ($AutoSizeColumns -ne 'None')
		{
			$DataGridView.AutoResizeColumns($AutoSizeColumns)
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		[ValidateNotNull()]
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($null -eq $Table)
		{
			$Table = New-Object System.Data.DataTable
		}
		
		if ($InputObject -is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
		{
			$Table = $InputObject.Tables[0]
		}
		else
		{
			if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
				
				if ($null -eq $InputObject) { return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach ($item in $InputObject)
				{
					if ($null -ne $item)
					{
						$object = $item
						break
					}
				}
				
				if ($null -eq $object) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if ($null -ne $prop.Value)
						{
							try { $type = $prop.Value.GetType() }
							catch { }
						}
						
						if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
							[void]$table.Columns.Add($prop.Name, $type)
						}
						else #Type info not found
						{
							[void]$table.Columns.Add($prop.Name)
						}
					}
				}
				
				if ($object -is [System.Data.DataRow])
				{
					foreach ($item in $InputObject)
					{
						$Table.Rows.Add($item)
					}
					return @( ,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()
			}
			
			foreach ($item in $InputObject)
			{
				$row = $table.NewRow()
				
				if ($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if ($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
		
		return @(,$Table)	
	}
	
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$abouToolStripMenuItem_Click={
		#TODO: Place custom script here
		#------------------------------------------------------------------------
		# Source File Information (DO NOT MODIFY)
		# Source ID: e85aa032-944d-429b-bdc5-825db62e02b6
		# Source File: C:\Users\rob.duboff\Desktop\Projects\Powershell\BadgerSoft\About.psf
		#------------------------------------------------------------------------
		
	<#
	    .NOTES
	    --------------------------------------------------------------------------------
	     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.127
	     Generated on:       9/22/2016 2:01 PM
	     Generated by:       Rob Duboff
	     Organization:       BadgerSoft
	    --------------------------------------------------------------------------------
	    .DESCRIPTION
	        GUI script generated by PowerShell Studio 2016
	#>
		#----------------------------------------------
		#region Application Functions
		#----------------------------------------------
		
		#endregion Application Functions
		
		#----------------------------------------------
		# Generated Form Function
		#----------------------------------------------
		function Call-About_psf
		{
			
			#----------------------------------------------
			#region Import the Assemblies
			#----------------------------------------------
			[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			#endregion Import Assemblies
			
			#----------------------------------------------
			#region Generated Form Objects
			#----------------------------------------------
			[System.Windows.Forms.Application]::EnableVisualStyles()
			$formAbout = New-Object 'System.Windows.Forms.Form'
			$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
			$buttonOK = New-Object 'System.Windows.Forms.Button'
			$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
			#endregion Generated Form Objects
			
			#----------------------------------------------
			# User Generated Script
			#----------------------------------------------
			
			$formAbout_Load = {
				#TODO: Initialize Form Controls here
				
			}
			
			# --End User Generated Script--
			#----------------------------------------------
			#region Generated Events
			#----------------------------------------------
			
			$Form_StateCorrection_Load =
			{
				#Correct the initial state of the form to prevent the .Net maximized form issue
				$formAbout.WindowState = $InitialFormWindowState
			}
			
			$Form_Cleanup_FormClosed =
			{
				#Remove all event handlers from the controls
				try
				{
					$formAbout.remove_Load($formAbout_Load)
					$formAbout.remove_Load($Form_StateCorrection_Load)
					$formAbout.remove_FormClosed($Form_Cleanup_FormClosed)
				}
				catch [Exception]
				{ }
			}
			#endregion Generated Events
			
			#----------------------------------------------
			#region Generated Form Code
			#----------------------------------------------
			$formAbout.SuspendLayout()
			#
			# formAbout
			#
			$formAbout.Controls.Add($picturebox1)
			$formAbout.Controls.Add($buttonOK)
			$formAbout.AcceptButton = $buttonOK
			$formAbout.AutoScaleDimensions = '6, 13'
			$formAbout.AutoScaleMode = 'Font'
			$formAbout.ClientSize = '284, 262'
			$formAbout.FormBorderStyle = 'FixedDialog'
			$formAbout.MaximizeBox = $False
			$formAbout.MinimizeBox = $False
			$formAbout.Name = 'formAbout'
			$formAbout.StartPosition = 'CenterScreen'
			$formAbout.Text = 'About'
			$formAbout.add_Load($formAbout_Load)
			#
			# picturebox1
			#
			#region Binary Data
			$picturebox1.Image = [System.Convert]::FromBase64String('
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')
			#endregion
			$picturebox1.Location = '65, 41'
			$picturebox1.Name = 'picturebox1'
			$picturebox1.Size = '151, 180'
			$picturebox1.TabIndex = 1
			$picturebox1.TabStop = $False
			#
			# buttonOK
			#
			$buttonOK.Anchor = 'Bottom, Right'
			$buttonOK.DialogResult = 'OK'
			$buttonOK.Location = '197, 227'
			$buttonOK.Name = 'buttonOK'
			$buttonOK.Size = '75, 23'
			$buttonOK.TabIndex = 0
			$buttonOK.Text = '&OK'
			$buttonOK.UseVisualStyleBackColor = $True
			$formAbout.ResumeLayout()
			#endregion Generated Form Code
			
			#----------------------------------------------
			
			#Save the initial state of the form
			$InitialFormWindowState = $formAbout.WindowState
			#Init the OnLoad event to correct the initial state of the form
			$formAbout.add_Load($Form_StateCorrection_Load)
			#Clean up the control events
			$formAbout.add_FormClosed($Form_Cleanup_FormClosed)
			#Show the Form
			return $formAbout.ShowDialog()
			
		} #End Function
		
		#Call the form
		Call-About_psf | Out-Null
		
	}
	
	$textbox1_TextChanged={
		#TODO: Place custom script here
		
	}
	
	$menustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
		#TODO: Place custom script here
		
	}
	
	$buttonConnect_Click={
		#TODO: Place custom script here
		$ComputerName = $textbox1.Text
		
		try
		{
			Get-EventLog -ComputerName $ComputerName -List -OutVariable Logs -ErrorAction Stop
			$statusbar1.Text = "Successfully connected to the computer $($ComputerName)"
			Load-ComboBox -ComboBox $ComboBoxEventLogSelect -Items $Logs.Log
		}
		
		catch
		{
			$errorprovider1.SetIconAlignment($buttonConnect, 'MiddleLeft')
			$errorprovider1.SetError($buttonConnect,$($_.Exception.Message))
			$statusbar1.Text = "$($ComputerName): $($_.Exception.Message)"
		}
	}
	
	$ComboBoxEventLogSelect_SelectedIndexChanged={
		#TODO: Place custom script here
		
	}
	
	$buttonLoad_Click={
		#TODO: Place custom script here
		
		$DataGridViewDisplayResults.AutoSizeColumnsMode = 'Fill'
		try
		{
			$script:LogsQueried = Get-EventLog -ComputerName $ComputerName -LogName $($ComboBoxEventLogSelect.SelectedItem) -Newest 10 -ErrorAction Stop | select EventId, EntryType, Message
			Load-DataGridView -DataGridView $DataGridViewDisplayResults -Item $LogsQueried
			$statusbar1.Text = "Successfully queries the $($ComboBoxEventLogSelect.SelectedItem) Log into the DataGridView"
		}
		
		
		catch
		{
			$statusbar1.Text = "$($ComboBoxEventLogSelect.SelectedItem) : $($_.Exception.Message)"
		}
	}
	
	$buttonExportResults_Click={
		#TODO: Place custom script here
		
		# $folderbrowsermoderndialog1.InitialDirectory = "C:\"
		
		if ($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
		{
			$SelectedPath = $folderbrowsermoderndialog1.SelectedPath
		}
		
		if ($radiobuttonCSV.Checked)
		{
			$LogsQueried | Export-Csv -NoTypeInformation -Path "$SelectedPath\Results.csv"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.csv file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				Invoke-Item -Path "$SelectedPath\Results.csv"
			}
		}
		
		if ($radiobuttonHTML.Checked)
		{
			$LogsQueried | ConvertTo-Html | Out-File -FilePath "$SelectedPath\Results.html"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.html file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				Invoke-Item -Path "$SelectedPath\Results.html"
			}
		}
	}
	
	$fileToolStripMenuItem_Click={
		#TODO: Place custom script here
		
	}
	
	$closeToolStripMenuItem_Click={
		#TODO: Place custom script here
		$formBadgerEventCollector.Close()
	}
	
	$onlineDocsToolStripMenuItem_Click={
		#TODO: Place custom script here
		Start-Process -FilePath "www.anotherdamnwebsite.com"
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formBadgerEventCollector.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonExportResults.remove_Click($buttonExportResults_Click)
			$buttonLoad.remove_Click($buttonLoad_Click)
			$ComboBoxEventLogSelect.remove_SelectedIndexChanged($ComboBoxEventLogSelect_SelectedIndexChanged)
			$buttonConnect.remove_Click($buttonConnect_Click)
			$textbox1.remove_TextChanged($textbox1_TextChanged)
			$menustrip1.remove_ItemClicked($menustrip1_ItemClicked)
			$formBadgerEventCollector.remove_Load($formBadgerEventCollector_Load)
			$fileToolStripMenuItem.remove_Click($fileToolStripMenuItem_Click)
			$closeToolStripMenuItem.remove_Click($closeToolStripMenuItem_Click)
			$onlineDocsToolStripMenuItem.remove_Click($onlineDocsToolStripMenuItem_Click)
			$abouToolStripMenuItem.remove_Click($abouToolStripMenuItem_Click)
			$formBadgerEventCollector.remove_Load($Form_StateCorrection_Load)
			$formBadgerEventCollector.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formBadgerEventCollector.SuspendLayout()
	$GroupBoxExportResults.SuspendLayout()
	$GroupBoxEventLog.SuspendLayout()
	$GroupBoxComputerNameInput.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formBadgerEventCollector
	#
	$formBadgerEventCollector.Controls.Add($statusbar1)
	$formBadgerEventCollector.Controls.Add($GroupBoxExportResults)
	$formBadgerEventCollector.Controls.Add($DataGridViewDisplayResults)
	$formBadgerEventCollector.Controls.Add($GroupBoxEventLog)
	$formBadgerEventCollector.Controls.Add($GroupBoxComputerNameInput)
	$formBadgerEventCollector.Controls.Add($menustrip1)
	$formBadgerEventCollector.AutoScaleDimensions = '6, 13'
	$formBadgerEventCollector.AutoScaleMode = 'Font'
	$formBadgerEventCollector.ClientSize = '549, 470'
	$formBadgerEventCollector.Name = 'formBadgerEventCollector'
	$formBadgerEventCollector.StartPosition = 'CenterScreen'
	$formBadgerEventCollector.Text = 'Badger Event Collector Service 1.0'
	$formBadgerEventCollector.add_Load($formBadgerEventCollector_Load)
	#
	# statusbar1
	#
	$statusbar1.Location = '0, 448'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '549, 22'
	$statusbar1.TabIndex = 4
	$statusbar1.Text = 'Badger Event Log Collector 1.0'
	#
	# GroupBoxExportResults
	#
	$GroupBoxExportResults.Controls.Add($buttonExportResults)
	$GroupBoxExportResults.Controls.Add($checkboxOpenResultsAutomatic)
	$GroupBoxExportResults.Controls.Add($radiobuttonHTML)
	$GroupBoxExportResults.Controls.Add($radiobuttonCSV)
	$GroupBoxExportResults.Location = '22, 386'
	$GroupBoxExportResults.Name = 'GroupBoxExportResults'
	$GroupBoxExportResults.Size = '503, 54'
	$GroupBoxExportResults.TabIndex = 3
	$GroupBoxExportResults.TabStop = $False
	$GroupBoxExportResults.Text = 'Export Results'
	#
	# buttonExportResults
	#
	$buttonExportResults.Location = '390, 19'
	$buttonExportResults.Name = 'buttonExportResults'
	$buttonExportResults.Size = '88, 25'
	$buttonExportResults.TabIndex = 3
	$buttonExportResults.Text = 'ExportResults'
	$buttonExportResults.UseVisualStyleBackColor = $True
	$buttonExportResults.add_Click($buttonExportResults_Click)
	#
	# checkboxOpenResultsAutomatic
	#
	$checkboxOpenResultsAutomatic.Location = '127, 20'
	$checkboxOpenResultsAutomatic.Name = 'checkboxOpenResultsAutomatic'
	$checkboxOpenResultsAutomatic.Size = '247, 24'
	$checkboxOpenResultsAutomatic.TabIndex = 2
	$checkboxOpenResultsAutomatic.Text = 'Open Results Automatically Once Exported'
	$checkboxOpenResultsAutomatic.UseVisualStyleBackColor = $True
	#
	# radiobuttonHTML
	#
	$radiobuttonHTML.Location = '66, 20'
	$radiobuttonHTML.Name = 'radiobuttonHTML'
	$radiobuttonHTML.Size = '104, 24'
	$radiobuttonHTML.TabIndex = 1
	$radiobuttonHTML.TabStop = $True
	$radiobuttonHTML.Text = 'HTML'
	$radiobuttonHTML.UseVisualStyleBackColor = $True
	#
	# radiobuttonCSV
	#
	$radiobuttonCSV.Location = '17, 20'
	$radiobuttonCSV.Name = 'radiobuttonCSV'
	$radiobuttonCSV.Size = '104, 24'
	$radiobuttonCSV.TabIndex = 0
	$radiobuttonCSV.TabStop = $True
	$radiobuttonCSV.Text = 'CSV'
	$radiobuttonCSV.UseVisualStyleBackColor = $True
	#
	# DataGridViewDisplayResults
	#
	$DataGridViewDisplayResults.BackgroundColor = 'White'
	$DataGridViewDisplayResults.ColumnHeadersHeightSizeMode = 'AutoSize'
	$DataGridViewDisplayResults.Location = '22, 210'
	$DataGridViewDisplayResults.Name = 'DataGridViewDisplayResults'
	$DataGridViewDisplayResults.Size = '503, 170'
	$DataGridViewDisplayResults.TabIndex = 2
	#
	# GroupBoxEventLog
	#
	$GroupBoxEventLog.Controls.Add($buttonLoad)
	$GroupBoxEventLog.Controls.Add($ComboBoxEventLogSelect)
	$GroupBoxEventLog.Controls.Add($labelSelectALogToQuery)
	$GroupBoxEventLog.Location = '22, 120'
	$GroupBoxEventLog.Name = 'GroupBoxEventLog'
	$GroupBoxEventLog.Size = '503, 81'
	$GroupBoxEventLog.TabIndex = 1
	$GroupBoxEventLog.TabStop = $False
	$GroupBoxEventLog.Text = 'Event Log Selection'
	#
	# buttonLoad
	#
	$buttonLoad.Location = '403, 34'
	$buttonLoad.Name = 'buttonLoad'
	$buttonLoad.Size = '74, 21'
	$buttonLoad.TabIndex = 2
	$buttonLoad.Text = 'Load'
	$buttonLoad.UseVisualStyleBackColor = $True
	$buttonLoad.add_Click($buttonLoad_Click)
	#
	# ComboBoxEventLogSelect
	#
	$ComboBoxEventLogSelect.FormattingEnabled = $True
	$ComboBoxEventLogSelect.Location = '137, 34'
	$ComboBoxEventLogSelect.Name = 'ComboBoxEventLogSelect'
	$ComboBoxEventLogSelect.Size = '247, 21'
	$ComboBoxEventLogSelect.TabIndex = 1
	$ComboBoxEventLogSelect.add_SelectedIndexChanged($ComboBoxEventLogSelect_SelectedIndexChanged)
	#
	# labelSelectALogToQuery
	#
	$labelSelectALogToQuery.AutoSize = $True
	$labelSelectALogToQuery.Location = '20, 37'
	$labelSelectALogToQuery.Name = 'labelSelectALogToQuery'
	$labelSelectALogToQuery.Size = '108, 13'
	$labelSelectALogToQuery.TabIndex = 0
	$labelSelectALogToQuery.Text = 'Select a Log to query'
	#
	# GroupBoxComputerNameInput
	#
	$GroupBoxComputerNameInput.Controls.Add($buttonConnect)
	$GroupBoxComputerNameInput.Controls.Add($textbox1)
	$GroupBoxComputerNameInput.Controls.Add($labelEnterComputerName)
	$GroupBoxComputerNameInput.Location = '22, 27'
	$GroupBoxComputerNameInput.Name = 'GroupBoxComputerNameInput'
	$GroupBoxComputerNameInput.Size = '503, 87'
	$GroupBoxComputerNameInput.TabIndex = 0
	$GroupBoxComputerNameInput.TabStop = $False
	$GroupBoxComputerNameInput.Text = 'Computer Name Input'
	#
	# buttonConnect
	#
	$buttonConnect.Location = '402, 36'
	$buttonConnect.Name = 'buttonConnect'
	$buttonConnect.Size = '75, 20'
	$buttonConnect.TabIndex = 2
	$buttonConnect.Text = 'Connect'
	$buttonConnect.UseVisualStyleBackColor = $True
	$buttonConnect.add_Click($buttonConnect_Click)
	#
	# textbox1
	#
	$textbox1.Location = '137, 36'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '247, 20'
	$textbox1.TabIndex = 1
	$textbox1.add_TextChanged($textbox1_TextChanged)
	#
	# labelEnterComputerName
	#
	$labelEnterComputerName.AutoSize = $True
	$labelEnterComputerName.Location = '20, 39'
	$labelEnterComputerName.Name = 'labelEnterComputerName'
	$labelEnterComputerName.Size = '111, 13'
	$labelEnterComputerName.TabIndex = 0
	$labelEnterComputerName.Text = 'Enter Computer Name'
	#
	# menustrip1
	#
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($helpToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Size = '549, 24'
	$menustrip1.TabIndex = 5
	$menustrip1.Text = 'menustrip1'
	$menustrip1.add_ItemClicked($menustrip1_ItemClicked)
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($closeToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.Size = '37, 20'
	$fileToolStripMenuItem.Text = 'File'
	$fileToolStripMenuItem.add_Click($fileToolStripMenuItem_Click)
	#
	# closeToolStripMenuItem
	#
	$closeToolStripMenuItem.Name = 'closeToolStripMenuItem'
	$closeToolStripMenuItem.Size = '152, 22'
	$closeToolStripMenuItem.Text = 'Close'
	$closeToolStripMenuItem.add_Click($closeToolStripMenuItem_Click)
	#
	# helpToolStripMenuItem
	#
	[void]$helpToolStripMenuItem.DropDownItems.Add($onlineDocsToolStripMenuItem)
	[void]$helpToolStripMenuItem.DropDownItems.Add($abouToolStripMenuItem)
	$helpToolStripMenuItem.Name = 'helpToolStripMenuItem'
	$helpToolStripMenuItem.Size = '44, 20'
	$helpToolStripMenuItem.Text = 'Help'
	#
	# onlineDocsToolStripMenuItem
	#
	$onlineDocsToolStripMenuItem.Name = 'onlineDocsToolStripMenuItem'
	$onlineDocsToolStripMenuItem.Size = '152, 22'
	$onlineDocsToolStripMenuItem.Text = 'Online Docs'
	$onlineDocsToolStripMenuItem.add_Click($onlineDocsToolStripMenuItem_Click)
	#
	# abouToolStripMenuItem
	#
	$abouToolStripMenuItem.Name = 'abouToolStripMenuItem'
	$abouToolStripMenuItem.Size = '152, 22'
	$abouToolStripMenuItem.Text = 'About'
	$abouToolStripMenuItem.add_Click($abouToolStripMenuItem_Click)
	#
	# errorprovider1
	#
	$errorprovider1.ContainerControl = $formBadgerEventCollector
	#
	# folderbrowsermoderndialog1
	#
	$menustrip1.ResumeLayout()
	$GroupBoxComputerNameInput.ResumeLayout()
	$GroupBoxEventLog.ResumeLayout()
	$GroupBoxExportResults.ResumeLayout()
	$formBadgerEventCollector.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formBadgerEventCollector.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formBadgerEventCollector.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formBadgerEventCollector.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formBadgerEventCollector.ShowDialog()

} #End Function

#Call the form
Call-BadgerEventLogsCollector_psf | Out-Null
